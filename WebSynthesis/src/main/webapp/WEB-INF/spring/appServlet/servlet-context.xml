<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<beans:bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<!-- 업로드 할 수 있는 파일의 최대 크기 (1024*1024*10 =10M) -->
		<beans:property value="10485760" name="maxUploadSize" />
	</beans:bean>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.naver.ccy6451" />
	
			<!-- Controller 가 처리하지 못하는 요청을 WAS가 처리하도록 하는
		설정입니다. 필수적으로 합니다. 요즘은 안쓰는 경우가 있는데 그게 카카오
		카카오 홈페이지는 완전히 리뉴얼되었다. 카카오는 싱글페이지 기반으로 페이지가
		하나이고 데이터를 가져올 때는 ajax를 이용해서 페이지 전환을 안합니다.
		그러면 Controller 자체를 안쓰는 경우도 있습니다.
		 -->
		<default-servlet-handler/>
	
</beans:beans>
